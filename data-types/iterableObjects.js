// üîÅ –ò—Ç–µ—Ä–∏—Ä—É–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã

// –ü—Ä–∏–º–µ—Ä —Å –º–∞—Å—Å–∏–≤–æ–º
let arr = ['a', 'b', 'c'];
for (let char of arr) {
  console.log(char); // 'a', 'b', 'c'
}

// –ü—Ä–∏–º–µ—Ä —Å –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–º –≤—Ä—É—á–Ω—É—é
let str = "Hi";
let iterator = str[Symbol.iterator]();
console.log(iterator.next()); // { value: 'H', done: false }
console.log(iterator.next()); // { value: 'i', done: false }
console.log(iterator.next()); // { value: undefined, done: true }

// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç
let range = {
  from: 1,
  to: 5,

  [Symbol.iterator]() {
    return {
      current: this.from,
      last: this.to,

      next() {
        if (this.current <= this.last) {
          return {done: false, value: this.current++};
        } else {
          return {done: true};
        }
      }
    };
  }
};

for (let num of range) {
  console.log(num); // 1, 2, 3, 4, 5
}

// ‚ùå –û–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç –Ω–µ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π
let obj = {a: 1, b: 2};
for (let key in obj) {
  console.log(key); // 'a', 'b'
}
for (let val of obj) {
} // –û—à–∏–±–∫–∞: obj –Ω–µ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π

// üîÑ Array.from

// –ü—Ä–∏–º–µ—Ä —Å–æ —Å—Ç—Ä–æ–∫–æ–π (–∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç)
let fromStr = Array.from("Hello");
console.log(fromStr); // ['H', 'e', 'l', 'l', 'o']

// –ü—Ä–∏–º–µ—Ä —Å –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤–æ–º
let pseudoArray = {
  0: "a",
  1: "b",
  2: "c",
  length: 3
};
let fromPseudo = Array.from(pseudoArray);
console.log(fromPseudo); // ['a', 'b', 'c']

// Array.from —Å —Ñ—É–Ω–∫—Ü–∏–µ–π
let doubled = Array.from([1, 2, 3], x => x * 2);
console.log(doubled); // [2, 4, 6]

