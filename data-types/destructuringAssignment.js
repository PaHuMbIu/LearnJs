/**
 * деструктурирующее присваивание - это специальный синтаксис,
 * который позволяет «распаковать» значения из массивов или объектов и присвоить их отдельным переменным
 */

// Деструктуризация массивов
const arr = ["Анна", "Иванова"];
const [firstName, lastName] = arr;

console.log(firstName) // Анна
console.log(lastName) // lastName
// Теперь firstName будет "Анна", а lastName — "Иванова".

// Пропуск элементов
const [firstName, , title] = ["Юлий", "Цезарь", "Император"];
console.log(firstName);
console.log(title);

// Остаточные элементы
const [firstName, ...rest] = ["Юлий", "Цезарь", "Император", "Рима"];
console.log(rest); // ["Цезарь", "Император", "Рима"]

// Деструктуризация объектов
const user = {
    name: "Анна",
    age: 25
};
const { name, age } = user;

// Деструктуризация в функциях
function greet({ name, age }) {
    console.log(`Привет, ${name}. Тебе ${age} лет.`);
}
greet({ name: "Анна", age: 25 });

//====================================================================================================================//
/**
 * Tasks
 */
//--------------------------------------------------------------------------------------------------------------------//
// Деструктурирующее присваивание

/**
 * Напишите деструктурирующее присваивание, которое:
 * свойство name присвоит в переменную name.
 * свойство years присвоит в переменную age.
 * свойство isAdmin присвоит в переменную isAdmin (false, если нет такого свойства)
 */

// const user = {
//     name: "John",
//     years: 30
// };
//
// const { name, years: age, isAdmin = false } = user;
//
// console.log(name); // John
// console.log(age); // 30
// console.log(isAdmin); // false
//====================================================================================================================//
// Максимальная зарплата

/**
 * Создайте функцию topSalary(salaries), которая возвращает имя самого высокооплачиваемого сотрудника.
 *
 * Если объект salaries пустой, то нужно вернуть null.
 * Если несколько высокооплачиваемых сотрудников, можно вернуть любого из них.
 * P.S. Используйте Object.entries и деструктурирование, чтобы перебрать пары ключ/значение.
 */

// const salaries = {
//     "John": 100,
//     "Pete": 300,
//     "Mary": 250,
//     "Larry": 300,
// };
//
// const topSalary = obj => {
//     let maxSalary = 0;
//     let topName = null;
//
//     for (const [ name, salary ] of Object.entries(obj)) {
//         if (salary > maxSalary) {
//             maxSalary = salary;
//             topName = name;
//         }
//     }
//     return topName;
// };
// console.log(topSalary(salaries)); // 300

