// üõ† –ß—Ç–æ —Ç–∞–∫–æ–µ Function.prototype?
/**
 * –ö–æ–≥–¥–∞ —Å–æ–∑–¥–∞—ë—à—å —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä:
 */

function CreatureType(name) {
  this.nameTag = name;
  this.isMovable = true;
}

/**
 * JavaScript –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å–≤–æ–π—Å—Ç–≤–æ
 * .prototype, –∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å –æ–¥–Ω–∏–º –≤–∞–∂–Ω—ã–º —Å–≤–æ–π—Å—Ç–≤–æ–º:
 */

console.log(CreatureType.prototype);
// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: { constructor: CreatureType }

// –ó–∞—á–µ–º –Ω—É–∂–µ–Ω .prototype?
/**
 * –í—Å–µ –æ–±—ä–µ–∫—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é new Creature(...), –Ω–∞—Å–ª–µ–¥—É—é—Ç –æ—Ç CreatureType.prototype.
 */

// üêæ –ü—Ä–∏–º–µ—Ä —Å new
function Creature(name) {
  this.nameTag = name;
}

Creature.prototype.greet = function () {
  console.log("–ü—Ä–∏–≤–µ—Ç, —è " + this.nameTag);
};

const bunny = new Creature("–ö—Ä–æ–ª–∏–∫");

bunny.greet(); // –ü—Ä–∏–≤–µ—Ç, —è –ö—Ä–æ–ª–∏–∫

// –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?
// –í—ã–∑–æ–≤:
new Creature("–ö—Ä–æ–ª–∏–∫")

// –î–µ–ª–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ:
const tempBunny = {}; // 1. —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
tempBunny.__proto__ = Creature.prototype; // 2. —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ—Ç–æ—Ç–∏–ø
Creature.call(tempBunny, "–ö—Ä–æ–ª–∏–∫"); // 3. –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å this = tempBunny

// üß¨ –ü—Ä–æ—Ç–æ—Ç–∏–ø ‚Üí —É —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
function Beast(name) {
  this.nameTag = name;
}

console.log(Beast.prototype.constructor === Beast); // true

const tiger = new Beast("–¢–∏–≥—Ä");

console.log(tiger.__proto__ === Beast.prototype); // true

/**
 * –û–±—ä–µ–∫—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ new, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—é—Ç __proto__, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –§—É–Ω–∫—Ü–∏—è.prototype
 */

// üîÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ —á–µ—Ä–µ–∑ .prototype
function CreatureWithMethods(name) {
  this.nameTag = name;
  // –ü–ª–æ—Ö–æ: –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç
  // this.greet = function() { ... };
}

Creature.prototype.greet = function () {
  console.log("–ü—Ä–∏–≤–µ—Ç, —è " + this.nameTag);
};

const kitty = new Creature("–ö–æ—Ç");
const doggy = new Creature("–ü—ë—Å");

kitty.greet(); // –ü—Ä–∏–≤–µ—Ç, —è –ö–æ—Ç
doggy.greet(); // –ü—Ä–∏–≤–µ—Ç, —è –ü—ë—Å

console.log(kitty.greet === doggy.greet); // true (–º–µ—Ç–æ–¥ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ)


// üß± –°–≤–æ–π—Å—Ç–≤–∞ –∏ –º–µ—Ç–æ–¥—ã –≤ .prototype
function Account(name) {
  this.nameTag = name;
}

Account.prototype.sayHi = function () {
  console.log("–ü—Ä–∏–≤–µ—Ç, " + this.nameTag);
};

const user1 = new Account("–í–∞—Å—è");

user1.sayHi(); // –ü—Ä–∏–≤–µ—Ç, –í–∞—Å—è

// üì¶ –ö—Ä–∞—Ç–∫–æ: –æ—Ç–ª–∏—á–∏–µ –º–µ–∂–¥—É .prototype –∏ __proto__
/**
 * | –ß—Ç–æ —ç—Ç–æ?        | –ö–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç | –ß—Ç–æ –¥–µ–ª–∞–µ—Ç                                                               |
 * | --------------- | ---------------- | ------------------------------------------------------------------------ |
 * | `f.prototype`   | –£ —Ñ—É–Ω–∫—Ü–∏–∏        | –û–±—ä–µ–∫—Ç, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ `new f()` |
 * | `obj.__proto__` | –£ –æ–±—ä–µ–∫—Ç–∞        | –£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø (—Ä–æ–¥–∏—Ç–µ–ª—è) –æ–±—ä–µ–∫—Ç–∞                                 |
 */

function Human(name) {
  this.nameTag = name;
}

Human.prototype.sayHi = function () {
  console.log("–ü—Ä–∏–≤–µ—Ç, " + this.nameTag);
};

const anna = new Human("–ê–Ω—è");

console.log(anna.__proto__ === Human.prototype); // true

// üß† –ê –µ—Å–ª–∏ –º—ã –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ–º .prototype?
function Wildlife() {
}

Wildlife.prototype = {
  greet() {
    console.log("–ü—Ä–∏–≤–µ—Ç!");
  }
};

const hare = new Wildlife();
hare.greet(); // –ü—Ä–∏–≤–µ—Ç!

/**
 * ‚ö†Ô∏è –ù–æ —Ç–µ–ø–µ—Ä—å constructor —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ –Ω–∞ Wildlife, –∞ –Ω–∞ Object
 */
console.log(hare.constructor === Wildlife); // false
console.log(hare.constructor === Object); // true

// –†–µ—à–µ–Ω–∏–µ
Wildlife.prototype = {
  constructor: Wildlife, // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π constructor
  greet() {
    console.log("–ü—Ä–∏–≤–µ—Ç!");
  }
};
