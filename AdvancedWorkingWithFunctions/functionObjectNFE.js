/**
 * –§—É–Ω–∫—Ü–∏–∏ –≤ JavaScript ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É—Ç:
 * –•—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
 * –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥—Ä—É–≥–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º
 * –í–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
 * –û–±–ª–∞–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∞–º–∏
 */

// üîç –°–≤–æ–π—Å—Ç–≤–æ name

/**
 * –°–≤–æ–π—Å—Ç–≤–æ name —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏.
 * –î–∞–∂–µ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–æ–Ω–∏–º–Ω–∞, JavaScript –ø—ã—Ç–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –µ—ë –∏–º—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:
 */

// function sayHi() {
//     console.log("Hi");
// }
// console.log(sayHi.name); // "sayHi"

// const greet = function() {};
// console.log(greet.name); // "greet"

// üî¢ –°–≤–æ–π—Å—Ç–≤–æ length
// function f1(a) {}
// function f2(a, b) {}
// function many(a, b, ...more) {}

// console.log(f1.length); // 1
// console.log(f2.length); // 2
// console.log(many.length); // 2

// üß¨ –§—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã
// function counter() {
//     counter.count++;
// }
// counter.count = 0;

// counter();
// counter();

// console.log(counter.count); // 2

// üîÅ –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è (NFE)

/**
 * –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Å–∞–º—É —Å–µ–±—è –ø–æ –∏–º–µ–Ω–∏,
 * —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–∏
 */

// const factorial = function f(n) {
//     return n ? n * f(n - 1) : 1;
// };
// console.log(factorial(5)); // 120

//====================================================================================================================//
/**
 * Tasks
 */
//--------------------------------------------------------------------------------------------------------------------//
// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞

/**
 * –ò–∑–º–µ–Ω–∏—Ç–µ –∫–æ–¥ makeCounter() —Ç–∞–∫, —á—Ç–æ–±—ã —Å—á—ë—Ç—á–∏–∫ –º–æ–≥ —É–º–µ–Ω—å—à–∞—Ç—å –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ:
 *
 * counter() –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ).
 * counter.set(value) –¥–æ–ª–∂–µ–Ω —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å—á—ë—Ç—á–∏–∫—É –∑–Ω–∞—á–µ–Ω–∏–µ value.
 * counter.decrease() –¥–æ–ª–∂–µ–Ω —É–º–µ–Ω—å—à–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞ –Ω–∞ 1.
 */

// function makeCounter() {
//     let count = 0;
//
//     function counter() {
//         return count++;
//     }
//
//     counter.set = value => count = value;
//
//     counter.decrease = () => count--;
//
//     return counter;
// }
//
// const counter = makeCounter();
//
// console.log( counter() ); // 0
// console.log( counter() ); // 1
//
// counter.set(10); // —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞
//
// console.log( counter() ); // 10
//
// counter.decrease(); // —É–º–µ–Ω—å—à–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞ –Ω–∞ 1
//
// console.log( counter() ); // 10 (–≤–º–µ—Å—Ç–æ 11)

/**
 * Not solved
 */
//====================================================================================================================//


