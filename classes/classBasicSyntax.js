// üìå 1. –ß—Ç–æ —Ç–∞–∫–æ–µ class
/**
 * –ö–ª–∞—Å—Å ‚Äî —ç—Ç–æ —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤, –∑–∞–¥–∞—ë—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ constructor –∏ –º–µ—Ç–æ–¥—ã –≤–Ω—É—Ç—Ä–∏ —Ç–µ–ª–∞ –∫–ª–∞—Å—Å–∞
 */

class User1 {
    constructor(name) {
        this.name = name;
    }
    sayHi() {
        console.log(this.name);
    }
}

const user = new User1("–ò–≤–∞–Ω");
user.sayHi(); // –ò–≤–∞–Ω

/**
 * –ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º —ç—Ç–æ –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:
 *
 * typeof User === "function"
 *
 * –ú–µ—Ç–æ–¥—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ User.prototype
 */

// üß± –ö–ª–∞—Å—Å = —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–π —Å–∞—Ö–∞—Ä? –î–∞ –∏ –Ω–µ—Ç.
/**
 * –ö–ª–∞—Å—Å ‚Äî —ç—Ç–æ –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –∏ –º–µ—Ç–æ–¥–æ–≤:
 */

function User(name) {
    this.name = name;
}
User.prototype.sayHi = function() {
    console.log(this.name);
};

/**
 * –û–±–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—é—Ç –ø–æ—Ö–æ–∂—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –Ω–æ class:
 * –†–∞–±–æ—Ç–∞–µ—Ç —Å—Ç—Ä–æ–≥–æ (use strict).
 * –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –±–µ–∑ new.
 */


//====================================================================================================================//
/**
 * Tasks
 */
//--------------------------------------------------------------------------------------------------------------------//
// –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –Ω–∞ –∫–ª–∞—Å—Å

// class Clock {
//
//     constructor({template}) {
//         this.template = template;
//     }
//
//     render() {
//         let date = new Date();
//
//         let hours = date.getHours();
//         if (hours < 10) hours = '0' + hours;
//
//         let mins = date.getMinutes();
//         if (mins < 10) mins = '0' + mins;
//
//         let secs = date.getSeconds();
//         if (secs < 10) secs = '0' + secs;
//
//         let output = this.template.replace('h', hours).replace('m', mins).replace('s', secs);
//
//         console.log(output);
//     }
//
//     stop() {
//         clearInterval(this.timer);
//     };
//
//     start() {
//         this.render();
//         this.timer = setInterval(() => this.render(), 1000);
//     };
// }
//
// let clock = new Clock({template: 'h:m:s'});
// console.log(clock)
// clock.start();
