// üßä –ß—Ç–æ —Ç–∞–∫–æ–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞?
/**
 * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —Å–∞–º–æ–º—É –∫–ª–∞—Å—Å—É, –∞ –Ω–µ –µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º.
 */

class Article {
    static publisher = "–ñ—É—Ä–Ω–∞–ª '–ö–æ–¥'";
}
console.log(Article.publisher); // –ñ—É—Ä–Ω–∞–ª '–ö–æ–¥'

/**
 * publisher ‚Äî —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ.
 * –û–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —É –∫–ª–∞—Å—Å–∞, –Ω–µ —É –æ–±—ä–µ–∫—Ç–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ new.
 */

// üß† –í–∞–∂–Ω–æ: –æ—Ç–ª–∏—á–∏–µ –æ–±—ã—á–Ω—ã—Ö –∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤
class Article1 {
    constructor(title) {
        this.title = title;         // –æ–±—ã—á–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
    }

    static category = "–ù–æ–≤–æ—Å—Ç–∏"; // —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
}

const a = new Article1("–ó–∞–≥–æ–ª–æ–≤–æ–∫");

console.log(a.title);           // –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)
console.log(a.category);        // undefined (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
console.log(Article1.category);  // –ù–æ–≤–æ—Å—Ç–∏ (—Ä–∞–±–æ—Ç–∞–µ—Ç)

// üì¶ –ì–¥–µ —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è?
class Counter {
    static count = 0;

    constructor() {
        Counter.count++;
    }
}

new Counter();
new Counter();

console.log(Counter.count); // 2

// üîÑ –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤
/**
 * –ï—Å–ª–∏ –∫–ª–∞—Å—Å –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç –¥—Ä—É–≥–æ–≥–æ, —Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–∂–µ –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è:
 */

class Animal {
    static planet = "–ó–µ–º–ª—è";
}

class Dog extends Animal {}

console.log(Dog.planet); // –ó–µ–º–ª—è

// ‚úèÔ∏è –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç "–ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º"?

class MyClass1 {
    static something = 123;
}

function MyClass() {}

MyClass.something = 123; // —Å–≤–æ–π—Å—Ç–≤–æ –≤–µ—à–∞–µ—Ç—Å—è –ø—Ä—è–º–æ –Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä

//====================================================================================================================//
/**
 * Tasks
 */
//--------------------------------------------------------------------------------------------------------------------//
// –ö–ª–∞—Å—Å —Ä–∞—Å—à–∏—Ä—è–µ—Ç –æ–±—ä–µ–∫—Ç?

// class Rabbit extends Object.prototype.constructor {
//     constructor(name) {
//         super()
//         this.name = name;
//     }
// }
//
// let rabbit = new Rabbit("–ö—Ä–æ–ª—å");
// console.log(rabbit)
// console.log( rabbit.hasOwnProperty('name') ); // –û—à–∏–±–∫–∞

